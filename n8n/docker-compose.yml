version: "3.8"

services:
  # PostgreSQL with pgvector extension for vector storage
  postgres:
    image: pgvector/pgvector:pg16
    container_name: ai-memory-postgres
    environment:
      POSTGRES_DB: ai_memory
      POSTGRES_USER: memory_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-memory_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts/postgres:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U memory_user -d ai_memory"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - ai-memory-network

  # Memgraph database for graph relationships
  memgraph:
    image: memgraph/memgraph:latest
    container_name: ai-memory-memgraph
    volumes:
      - memgraph_data:/var/lib/memgraph
      - ./init-scripts/memgraph:/docker-entrypoint-initdb.d
    ports:
      - "7687:7687" # Bolt protocol
      - "3000:3000" # HTTP interface (default)
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - ai-memory-network

  # Optional: n8n for workflow automation
  n8n:
    image: n8nio/n8n:latest
    container_name: ai-memory-n8n
    environment:
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: ai_memory
      DB_POSTGRESDB_USER: n8n_user
      DB_POSTGRESDB_PASSWORD: ${N8N_DB_PASSWORD:-n8n_password}
      N8N_ENCRYPTION_KEY: ${N8N_ENCRYPTION_KEY}
      N8N_HOST: 0.0.0.0
      N8N_PORT: 5678
      N8N_PROTOCOL: http
      WEBHOOK_URL: ${WEBHOOK_URL:-http://localhost:5678}
      GENERIC_TIMEZONE: ${GENERIC_TIMEZONE:-UTC}
      N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: "false"
    volumes:
      - n8n_data:/home/node/.n8n
    ports:
      - "5678:5678"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ai-memory-network
    restart: unless-stopped

  # Vector database service (alternative to PostgreSQL with pgvector)
  qdrant:
    image: qdrant/qdrant:latest
    container_name: ai-memory-qdrant
    volumes:
      - qdrant_storage:/qdrant/storage
    ports:
      - "6333:6333" # REST API
      - "6334:6334" # gRPC
    networks:
      - ai-memory-network

volumes:
  postgres_data:
    driver: local
  memgraph_data:
    driver: local
  n8n_data:
    driver: local
  qdrant_storage:
    driver: local

networks:
  ai-memory-network:
    driver: bridge
